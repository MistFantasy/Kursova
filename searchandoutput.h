#ifndef SEARCHANDOUTPUT_H
#define SEARCHANDOUTPUT_H

#include <QDialog>
#include "poolpass.h"
namespace Ui {
  class SearchAndOutput;
}

class SearchAndOutput : public QDialog
{
  Q_OBJECT

public:
  explicit SearchAndOutput(QWidget *parent = nullptr);
  ~SearchAndOutput();

  //Метод, який встановлює елементи відповідної функції
  //----------------------------------------------------------------------
  void SwitchVisible(QString WhatMethod);

  //Метод, який вертає бул, чи була натиснута клавіша Cancel
  //----------------------------------------------------------------------
  bool GetIsCancelled() const;

  //Гетер, який повертає вказівник на ім'я
  //----------------------------------------------------------------------
  const QString * GetName() const;

  //Гетер, який повертає вказівник на тривалість перебування
  //----------------------------------------------------------------------
  const int * GetSessionDuration() const;

  //Гетер, який повертає вказівник на к-сть відвідувань в місяць
  //----------------------------------------------------------------------
  const int * GetMonthsVisits() const;

  //Метод, який встановлює бул, кожен раз при запуску діалового вікна
  //----------------------------------------------------------------------
  void SetIsCancelled(bool Cancel);

  //Метод, який встановлює список об'єктів класу PoolPass
  //----------------------------------------------------------------------
  void SetListOfPoolPasses(QVector<PoolPass> ListOfPasses);

  //Функція, яка виводить інформацію згідно з завданням
  //----------------------------------------------------------------------
  void TextBrowserOutput();

  //Додаткова функція виводу об'єкту у TextBrowser, який знаходиться в діалоговому вікні
  //----------------------------------------------------------------------
  void OutputInformation(int Index);

  //Метод, який встановлює значення за замовчуванням в об'єктах діалогового вікна
  //----------------------------------------------------------------------
  void ClearDialog();

  //Метод, для перевірки вхідних даних з LineEdit-ів
  //----------------------------------------------------------------------
  bool CheckInputInformation(QString &ErrorMessage);

private slots:

  //Метод, який викликається при натисканні на кнопку OK
  //---------------------------------------------------------------------
  void on_OKButton_clicked();

  //Метод, який викликається при натисканні на кнопку Cancel
  //----------------------------------------------------------------------
  void on_CancelButton_clicked();

  //Метод, який активовує спінбокс, який відповідає за к-сть відвідувань
  //----------------------------------------------------------------------
  void on_MonthsVisitsCheckBox_clicked();

  //Метод, який активовує спінбокс, який відповідає за тривалість перебування
  //----------------------------------------------------------------------
  void on_SessionDurCheckBox_clicked();

  //Метод, який активовує спінбокс, який відповідає за ПІП
  //----------------------------------------------------------------------
  void on_PIPCheckBox_clicked();

  //Метод, який викликається при натисканні на кнопку "Вивести дані"
  //----------------------------------------------------------------------
  void on_OutputButton_clicked();

private:
  Ui::SearchAndOutput *ui;
  QVector<PoolPass> ListOfPoolPasses; //Вектор об'єктів типу PoolPass
  QString Name;                       //Змінна, яка містить ПІП
  int SessionDuration;                //Змінна, яка містить тривалість перебування
  int MonthsVisits;                   //Змінна, яка містить к-сть відвідувань
  bool IsCancelled;                   //Змінна, яка визначає чи була натиснута клавіша Cancel
};

#endif // SEARCHANDOUTPUT_H
